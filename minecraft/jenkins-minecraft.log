Started by user admin
Obtained spring-boot-app/JenkinsFile from git https://github.com/Dappyplay4u/springboot.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/minecraft-deployment
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/Dappyplay4u/springboot.git
 > git init /var/lib/jenkins/workspace/minecraft-deployment # timeout=10
Fetching upstream changes from https://github.com/Dappyplay4u/springboot.git
 > git --version # timeout=10
 > git --version # 'git version 2.40.1'
 > git fetch --tags --force --progress -- https://github.com/Dappyplay4u/springboot.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/Dappyplay4u/springboot.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision d84ca51f6a24b1d6dfd2dac2abbd958e15c3992b (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f d84ca51f6a24b1d6dfd2dac2abbd958e15c3992b # timeout=10
Commit message: "updates"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $AWS_ACCESS_KEY_ID or $AWS_SECRET_ACCESS_KEY
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Tool Install)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Git Checkout)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
Cloning the application code...
[Pipeline] git
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/minecraft-deployment/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/Dappyplay4u/springboot.git # timeout=10
Fetching upstream changes from https://github.com/Dappyplay4u/springboot.git
 > git --version # timeout=10
 > git --version # 'git version 2.40.1'
 > git fetch --tags --force --progress -- https://github.com/Dappyplay4u/springboot.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision d84ca51f6a24b1d6dfd2dac2abbd958e15c3992b (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f d84ca51f6a24b1d6dfd2dac2abbd958e15c3992b # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b main d84ca51f6a24b1d6dfd2dac2abbd958e15c3992b # timeout=10
Commit message: "updates"
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (create eks cluster)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] dir
Running in /var/lib/jenkins/workspace/minecraft-deployment/terraform/eks-cluster-ec2
[Pipeline] {
[Pipeline] sh
+ terraform init

[0m[1mInitializing the backend...[0m
[0m[1mInitializing modules...[0m
Downloading registry.terraform.io/terraform-aws-modules/iam/aws 5.34.0 for aws_load_balancer_controller_irsa_role...
- aws_load_balancer_controller_irsa_role in .terraform/modules/aws_load_balancer_controller_irsa_role/modules/iam-role-for-service-accounts-eks

[0m[1mInitializing provider plugins...[0m
- Finding hashicorp/aws versions matching ">= 4.0.0"...
- Finding latest version of hashicorp/kubernetes...
- Finding latest version of hashicorp/helm...
- Finding latest version of hashicorp/tls...
- Installing hashicorp/aws v5.35.0...
- Installed hashicorp/aws v5.35.0 (signed by HashiCorp)
- Installing hashicorp/kubernetes v2.25.2...
- Installed hashicorp/kubernetes v2.25.2 (signed by HashiCorp)
- Installing hashicorp/helm v2.12.1...
- Installed hashicorp/helm v2.12.1 (signed by HashiCorp)
- Installing hashicorp/tls v4.0.5...
- Installed hashicorp/tls v4.0.5 (signed by HashiCorp)

Terraform has created a lock file [1m.terraform.lock.hcl[0m to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[Pipeline] sh
+ terraform fmt
provider.tf
vpc.tf
[Pipeline] sh
+ terraform validate
[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0m  with aws_eip.minecraft-eks-cluster-nat,
[33mâ”‚[0m [0m  on vpc.tf line 91, in resource "aws_eip" "minecraft-eks-cluster-nat":
[33mâ”‚[0m [0m  91:   vpc = [4mtrue[0m[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0muse domain attribute instead
[33mâ•µ[0m[0m
[32m[1mSuccess![0m The configuration is valid, but there were some
validation warnings as shown above.
[0m
[Pipeline] sh
+ terraform plan -out=tfplan
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_caller_identity.current: Read complete after 0s [id=568170370118][0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.load_balancer_controller[0]: Reading...[0m[0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.load_balancer_controller[0]: Read complete after 0s [id=2997734474][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # data.aws_eks_cluster.minecraft-eks-cluster[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_eks_cluster" "minecraft-eks-cluster" {
      [32m+[0m[0m access_config             = (known after apply)
      [32m+[0m[0m arn                       = (known after apply)
      [32m+[0m[0m certificate_authority     = (known after apply)
      [32m+[0m[0m cluster_id                = (known after apply)
      [32m+[0m[0m created_at                = (known after apply)
      [32m+[0m[0m enabled_cluster_log_types = (known after apply)
      [32m+[0m[0m endpoint                  = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m identity                  = (known after apply)
      [32m+[0m[0m kubernetes_network_config = (known after apply)
      [32m+[0m[0m name                      = (known after apply)
      [32m+[0m[0m outpost_config            = (known after apply)
      [32m+[0m[0m platform_version          = (known after apply)
      [32m+[0m[0m role_arn                  = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m tags                      = (known after apply)
      [32m+[0m[0m version                   = (known after apply)
      [32m+[0m[0m vpc_config                = (known after apply)
    }

[1m  # data.aws_eks_cluster_auth.minecraft-eks-cluster[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_eks_cluster_auth" "minecraft-eks-cluster" {
      [32m+[0m[0m id    = (known after apply)
      [32m+[0m[0m name  = (known after apply)
      [32m+[0m[0m token = (sensitive value)
    }

[1m  # data.tls_certificate.minecraft-eks-cluster[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "tls_certificate" "minecraft-eks-cluster" {
      [32m+[0m[0m certificates = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m url          = (known after apply)
    }

[1m  # aws_eip.minecraft-eks-cluster-nat[0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "minecraft-eks-cluster-nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name" = "minecraft-nat"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name"    = "minecraft-nat"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m vpc                  = true
    }

[1m  # aws_eks_cluster.minecraft-eks-cluster[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_cluster" "minecraft-eks-cluster" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m certificate_authority = (known after apply)
      [32m+[0m[0m cluster_id            = (known after apply)
      [32m+[0m[0m created_at            = (known after apply)
      [32m+[0m[0m endpoint              = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m identity              = (known after apply)
      [32m+[0m[0m name                  = "minecraft-eks-cluster"
      [32m+[0m[0m platform_version      = (known after apply)
      [32m+[0m[0m role_arn              = (known after apply)
      [32m+[0m[0m status                = (known after apply)
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "minecraft"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m version               = "1.25"

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m cluster_security_group_id = (known after apply)
          [32m+[0m[0m endpoint_private_access   = false
          [32m+[0m[0m endpoint_public_access    = true
          [32m+[0m[0m public_access_cidrs       = [
              [32m+[0m[0m "0.0.0.0/0",
            ]
          [32m+[0m[0m security_group_ids        = (known after apply)
          [32m+[0m[0m subnet_ids                = (known after apply)
          [32m+[0m[0m vpc_id                    = (known after apply)
        }
    }

[1m  # aws_eks_node_group.eks_node_group[0m will be created
[0m  [32m+[0m[0m resource "aws_eks_node_group" "eks_node_group" {
      [32m+[0m[0m ami_type               = (known after apply)
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m capacity_type          = (known after apply)
      [32m+[0m[0m cluster_name           = "minecraft-eks-cluster"
      [32m+[0m[0m disk_size              = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m instance_types         = [
          [32m+[0m[0m "t2.medium",
        ]
      [32m+[0m[0m node_group_name        = "minecraft-eks-cluster-node_group"
      [32m+[0m[0m node_group_name_prefix = (known after apply)
      [32m+[0m[0m node_role_arn          = (known after apply)
      [32m+[0m[0m release_version        = (known after apply)
      [32m+[0m[0m resources              = (known after apply)
      [32m+[0m[0m status                 = (known after apply)
      [32m+[0m[0m subnet_ids             = (known after apply)
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"    = "minecraft"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m version                = (known after apply)

      [32m+[0m[0m scaling_config {
          [32m+[0m[0m desired_size = 2
          [32m+[0m[0m max_size     = 3
          [32m+[0m[0m min_size     = 2
        }
    }

[1m  # aws_iam_openid_connect_provider.minecraft-eks-cluster[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_openid_connect_provider" "minecraft-eks-cluster" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m client_id_list  = [
          [32m+[0m[0m "sts.amazonaws.com",
        ]
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m tags_all        = {
          [32m+[0m[0m "Name"    = "minecraft"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m thumbprint_list = (known after apply)
      [32m+[0m[0m url             = (known after apply)
    }

[1m  # aws_iam_role.minecraft-eks-cluster[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "minecraft-eks-cluster" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "eks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "eks-cluster-minecraft-eks-cluster"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "minecraft"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # aws_iam_role.minecraft-eks-cluster-eks_node_group_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "minecraft-eks-cluster-eks_node_group_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "minecraft-eks-cluster-node-group_role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "minecraft"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # aws_iam_role_policy_attachment.AmazonEC2ContainerRegistryReadOnly[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "AmazonEC2ContainerRegistryReadOnly" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      [32m+[0m[0m role       = "minecraft-eks-cluster-node-group_role"
    }

[1m  # aws_iam_role_policy_attachment.AmazonEKSWorkerNodePolicy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "AmazonEKSWorkerNodePolicy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
      [32m+[0m[0m role       = "minecraft-eks-cluster-node-group_role"
    }

[1m  # aws_iam_role_policy_attachment.AmazonEKS_CNI_Policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "AmazonEKS_CNI_Policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
      [32m+[0m[0m role       = "minecraft-eks-cluster-node-group_role"
    }

[1m  # aws_iam_role_policy_attachment.minecraft-eks-cluster-policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "minecraft-eks-cluster-policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      [32m+[0m[0m role       = "eks-cluster-minecraft-eks-cluster"
    }

[1m  # aws_internet_gateway.minecraft-eks-cluster-igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "minecraft-eks-cluster-igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "minecraft-igw"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name"    = "minecraft-igw"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # aws_nat_gateway.minecraft-eks-cluster-nat[0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "minecraft-eks-cluster-nat" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "minecraft-nat"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name"    = "minecraft-nat"
          [32m+[0m[0m "project" = "minecraft-App"
        }
    }

[1m  # aws_route_table.private[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = ""
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = (known after apply)
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "minecraft-private"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"    = "minecraft-private"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # aws_route_table.public[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "minecraft-public"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name"    = "minecraft-public"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # aws_route_table_association.private-us-east-1a[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private-us-east-1a" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # aws_route_table_association.private-us-east-1b[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private-us-east-1b" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # aws_route_table_association.public-us-east-1a[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public-us-east-1a" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # aws_route_table_association.public-us-east-1b[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public-us-east-1b" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # aws_security_group.minecraft-eks-cluster[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "minecraft-eks-cluster" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Cluster communication with worker nodes"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 2049
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 2049
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 8080
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 8080
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 9090
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 9090
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 9443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 9443
            },
        ]
      [32m+[0m[0m name                   = "minecraft-EKS-cluster-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"    = "minecraft"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_subnet.private-us-east-1a[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private-us-east-1a" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.0.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"                                        = "private-us-east-1a"
          [32m+[0m[0m "kubernetes.io/cluster/minecraft-eks-cluster" = "owned"
          [32m+[0m[0m "kubernetes.io/role/internal-elb"             = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"                                        = "private-us-east-1a"
          [32m+[0m[0m "kubernetes.io/cluster/minecraft-eks-cluster" = "owned"
          [32m+[0m[0m "kubernetes.io/role/internal-elb"             = "1"
          [32m+[0m[0m "project"                                     = "minecraft-App"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_subnet.private-us-east-1b[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private-us-east-1b" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.32.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"                                        = "private-us-east-1b"
          [32m+[0m[0m "kubernetes.io/cluster/minecraft-eks-cluster" = "owned"
          [32m+[0m[0m "kubernetes.io/role/internal-elb"             = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"                                        = "private-us-east-1b"
          [32m+[0m[0m "kubernetes.io/cluster/minecraft-eks-cluster" = "owned"
          [32m+[0m[0m "kubernetes.io/role/internal-elb"             = "1"
          [32m+[0m[0m "project"                                     = "minecraft-App"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_subnet.public-us-east-1a[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public-us-east-1a" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.64.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"                                        = "public-us-east-1a"
          [32m+[0m[0m "kubernetes.io/cluster/minecraft-eks-cluster" = "owned"
          [32m+[0m[0m "kubernetes.io/role/elb"                      = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"                                        = "public-us-east-1a"
          [32m+[0m[0m "kubernetes.io/cluster/minecraft-eks-cluster" = "owned"
          [32m+[0m[0m "kubernetes.io/role/elb"                      = "1"
          [32m+[0m[0m "project"                                     = "minecraft-App"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_subnet.public-us-east-1b[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public-us-east-1b" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.20.96.0/20"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name"                                        = "public-us-east-1b"
          [32m+[0m[0m "kubernetes.io/cluster/minecraft-eks-cluster" = "owned"
          [32m+[0m[0m "kubernetes.io/role/elb"                      = "1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name"                                        = "public-us-east-1b"
          [32m+[0m[0m "kubernetes.io/cluster/minecraft-eks-cluster" = "owned"
          [32m+[0m[0m "kubernetes.io/role/elb"                      = "1"
          [32m+[0m[0m "project"                                     = "minecraft-App"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # aws_vpc.minecraft-eks-cluster-main[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "minecraft-eks-cluster-main" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.20.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "minecraft-VPC"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"    = "minecraft-VPC"
          [32m+[0m[0m "project" = "minecraft-App"
        }
    }

[1m  # helm_release.aws_load_balancer_controller[0m will be created
[0m  [32m+[0m[0m resource "helm_release" "aws_load_balancer_controller" {
      [32m+[0m[0m atomic                     = false
      [32m+[0m[0m chart                      = "aws-load-balancer-controller"
      [32m+[0m[0m cleanup_on_fail            = false
      [32m+[0m[0m create_namespace           = false
      [32m+[0m[0m dependency_update          = false
      [32m+[0m[0m disable_crd_hooks          = false
      [32m+[0m[0m disable_openapi_validation = false
      [32m+[0m[0m disable_webhooks           = false
      [32m+[0m[0m force_update               = false
      [32m+[0m[0m id                         = (known after apply)
      [32m+[0m[0m lint                       = false
      [32m+[0m[0m manifest                   = (known after apply)
      [32m+[0m[0m max_history                = 0
      [32m+[0m[0m metadata                   = (known after apply)
      [32m+[0m[0m name                       = "aws-load-balancer-controller"
      [32m+[0m[0m namespace                  = "kube-system"
      [32m+[0m[0m pass_credentials           = false
      [32m+[0m[0m recreate_pods              = false
      [32m+[0m[0m render_subchart_notes      = true
      [32m+[0m[0m replace                    = false
      [32m+[0m[0m repository                 = "https://aws.github.io/eks-charts"
      [32m+[0m[0m reset_values               = false
      [32m+[0m[0m reuse_values               = false
      [32m+[0m[0m skip_crds                  = false
      [32m+[0m[0m status                     = "deployed"
      [32m+[0m[0m timeout                    = 300
      [32m+[0m[0m verify                     = false
      [32m+[0m[0m version                    = "1.4.4"
      [32m+[0m[0m wait                       = true
      [32m+[0m[0m wait_for_jobs              = false

      [32m+[0m[0m set {
          [32m+[0m[0m name  = "clusterName"
          [32m+[0m[0m value = (known after apply)
        }
      [32m+[0m[0m set {
          [32m+[0m[0m name  = "replicaCount"
          [32m+[0m[0m value = "2"
        }
      [32m+[0m[0m set {
          [32m+[0m[0m name  = "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn"
          [32m+[0m[0m value = (known after apply)
        }
      [32m+[0m[0m set {
          [32m+[0m[0m name  = "serviceAccount.name"
          [32m+[0m[0m value = "aws-load-balancer-controller"
        }
    }

[1m  # kubernetes_ingress_class_v1.ingress_class_default[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_ingress_class_v1" "ingress_class_default" {
      [32m+[0m[0m id = (known after apply)

      [32m+[0m[0m metadata {
          [32m+[0m[0m annotations      = {
              [32m+[0m[0m "ingressclass.kubernetes.io/is-default-class" = "true"
            }
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m name             = "my-aws-ingress-class"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }

      [32m+[0m[0m spec {
          [32m+[0m[0m controller = "ingress.k8s.aws/alb"
        }
    }

[1m  # kubernetes_namespace.aws_load_balancer_controller[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_namespace" "aws_load_balancer_controller" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m wait_for_default_service_account = false

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app" = "minecraft-app"
            }
          [32m+[0m[0m name             = "aws-load-balancer-controller"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # kubernetes_namespace.minecraft-application[0m will be created
[0m  [32m+[0m[0m resource "kubernetes_namespace" "minecraft-application" {
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m wait_for_default_service_account = false

      [32m+[0m[0m metadata {
          [32m+[0m[0m generation       = (known after apply)
          [32m+[0m[0m labels           = {
              [32m+[0m[0m "app" = "minecraft-app"
            }
          [32m+[0m[0m name             = "minecraft"
          [32m+[0m[0m resource_version = (known after apply)
          [32m+[0m[0m uid              = (known after apply)
        }
    }

[1m  # module.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.this[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "this" {
      [32m+[0m[0m id   = (known after apply)
      [32m+[0m[0m json = (known after apply)

      [32m+[0m[0m statement {
          [32m+[0m[0m actions = [
              [32m+[0m[0m "sts:AssumeRoleWithWebIdentity",
            ]
          [32m+[0m[0m effect  = "Allow"

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "sts.amazonaws.com",
                ]
              [32m+[0m[0m variable = (known after apply)
            }
          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "system:serviceaccount:kube-system:aws-load-balancer-controller",
                ]
              [32m+[0m[0m variable = (known after apply)
            }

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m (known after apply),
                ]
              [32m+[0m[0m type        = "Federated"
            }
        }
    }

[1m  # module.aws_load_balancer_controller_irsa_role.aws_iam_policy.load_balancer_controller[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_policy" "load_balancer_controller" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Provides permissions for AWS Load Balancer Controller addon"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
      [32m+[0m[0m name_prefix = "AmazonEKS_AWS_Load_Balancer_Controller-"
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m policy      = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "iam:CreateServiceLinkedRole"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "iam:AWSServiceName" = "elasticloadbalancing.amazonaws.com"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "elasticloadbalancing:DescribeTrustStores",
                          [32m+[0m[0m "elasticloadbalancing:DescribeTargetHealth",
                          [32m+[0m[0m "elasticloadbalancing:DescribeTargetGroups",
                          [32m+[0m[0m "elasticloadbalancing:DescribeTargetGroupAttributes",
                          [32m+[0m[0m "elasticloadbalancing:DescribeTags",
                          [32m+[0m[0m "elasticloadbalancing:DescribeSSLPolicies",
                          [32m+[0m[0m "elasticloadbalancing:DescribeRules",
                          [32m+[0m[0m "elasticloadbalancing:DescribeLoadBalancers",
                          [32m+[0m[0m "elasticloadbalancing:DescribeLoadBalancerAttributes",
                          [32m+[0m[0m "elasticloadbalancing:DescribeListeners",
                          [32m+[0m[0m "elasticloadbalancing:DescribeListenerCertificates",
                          [32m+[0m[0m "ec2:GetCoipPoolUsage",
                          [32m+[0m[0m "ec2:DescribeVpcs",
                          [32m+[0m[0m "ec2:DescribeVpcPeeringConnections",
                          [32m+[0m[0m "ec2:DescribeTags",
                          [32m+[0m[0m "ec2:DescribeSubnets",
                          [32m+[0m[0m "ec2:DescribeSecurityGroups",
                          [32m+[0m[0m "ec2:DescribeNetworkInterfaces",
                          [32m+[0m[0m "ec2:DescribeInternetGateways",
                          [32m+[0m[0m "ec2:DescribeInstances",
                          [32m+[0m[0m "ec2:DescribeCoipPools",
                          [32m+[0m[0m "ec2:DescribeAvailabilityZones",
                          [32m+[0m[0m "ec2:DescribeAddresses",
                          [32m+[0m[0m "ec2:DescribeAccountAttributes",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "wafv2:GetWebACLForResource",
                          [32m+[0m[0m "wafv2:GetWebACL",
                          [32m+[0m[0m "wafv2:DisassociateWebACL",
                          [32m+[0m[0m "wafv2:AssociateWebACL",
                          [32m+[0m[0m "waf-regional:GetWebACLForResource",
                          [32m+[0m[0m "waf-regional:GetWebACL",
                          [32m+[0m[0m "waf-regional:DisassociateWebACL",
                          [32m+[0m[0m "waf-regional:AssociateWebACL",
                          [32m+[0m[0m "shield:GetSubscriptionState",
                          [32m+[0m[0m "shield:DescribeProtection",
                          [32m+[0m[0m "shield:DeleteProtection",
                          [32m+[0m[0m "shield:CreateProtection",
                          [32m+[0m[0m "iam:ListServerCertificates",
                          [32m+[0m[0m "iam:GetServerCertificate",
                          [32m+[0m[0m "cognito-idp:DescribeUserPoolClient",
                          [32m+[0m[0m "acm:ListCertificates",
                          [32m+[0m[0m "acm:DescribeCertificate",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "ec2:RevokeSecurityGroupIngress",
                          [32m+[0m[0m "ec2:CreateSecurityGroup",
                          [32m+[0m[0m "ec2:AuthorizeSecurityGroupIngress",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "ec2:CreateTags"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m Null         = {
                              [32m+[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "ec2:CreateAction" = "CreateSecurityGroup"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "arn:aws:ec2:*:*:security-group/*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "ec2:DeleteTags",
                          [32m+[0m[0m "ec2:CreateTags",
                        ]
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m Null = {
                              [32m+[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster"  = "true"
                              [32m+[0m[0m "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "arn:aws:ec2:*:*:security-group/*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "ec2:RevokeSecurityGroupIngress",
                          [32m+[0m[0m "ec2:DeleteSecurityGroup",
                          [32m+[0m[0m "ec2:AuthorizeSecurityGroupIngress",
                        ]
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m Null = {
                              [32m+[0m[0m "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "elasticloadbalancing:CreateTargetGroup",
                          [32m+[0m[0m "elasticloadbalancing:CreateLoadBalancer",
                          [32m+[0m[0m "elasticloadbalancing:AddTags",
                        ]
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m Null = {
                              [32m+[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "elasticloadbalancing:DeleteRule",
                          [32m+[0m[0m "elasticloadbalancing:DeleteListener",
                          [32m+[0m[0m "elasticloadbalancing:CreateRule",
                          [32m+[0m[0m "elasticloadbalancing:CreateListener",
                          [32m+[0m[0m "elasticloadbalancing:AddTags",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "elasticloadbalancing:RemoveTags",
                          [32m+[0m[0m "elasticloadbalancing:AddTags",
                        ]
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m Null = {
                              [32m+[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster"  = "true"
                              [32m+[0m[0m "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = [
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                        ]
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "elasticloadbalancing:RemoveTags",
                          [32m+[0m[0m "elasticloadbalancing:AddTags",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = [
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*",
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                        ]
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "elasticloadbalancing:SetSubnets",
                          [32m+[0m[0m "elasticloadbalancing:SetSecurityGroups",
                          [32m+[0m[0m "elasticloadbalancing:SetIpAddressType",
                          [32m+[0m[0m "elasticloadbalancing:ModifyTargetGroupAttributes",
                          [32m+[0m[0m "elasticloadbalancing:ModifyTargetGroup",
                          [32m+[0m[0m "elasticloadbalancing:ModifyLoadBalancerAttributes",
                          [32m+[0m[0m "elasticloadbalancing:DeleteTargetGroup",
                          [32m+[0m[0m "elasticloadbalancing:DeleteLoadBalancer",
                        ]
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m Null = {
                              [32m+[0m[0m "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = "*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "elasticloadbalancing:AddTags"
                      [32m+[0m[0m Condition = {
                          [32m+[0m[0m Null         = {
                              [32m+[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                          [32m+[0m[0m StringEquals = {
                              [32m+[0m[0m "elasticloadbalancing:CreateAction" = [
                                  [32m+[0m[0m "CreateTargetGroup",
                                  [32m+[0m[0m "CreateLoadBalancer",
                                ]
                            }
                        }
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Resource  = [
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                          [32m+[0m[0m "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                        ]
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "elasticloadbalancing:RegisterTargets",
                          [32m+[0m[0m "elasticloadbalancing:DeregisterTargets",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "elasticloadbalancing:SetWebAcl",
                          [32m+[0m[0m "elasticloadbalancing:RemoveListenerCertificates",
                          [32m+[0m[0m "elasticloadbalancing:ModifyRule",
                          [32m+[0m[0m "elasticloadbalancing:ModifyListener",
                          [32m+[0m[0m "elasticloadbalancing:AddListenerCertificates",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m policy_id   = (known after apply)
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Name"    = "minecraft"
          [32m+[0m[0m "project" = "minecraft-App"
        }
    }

[1m  # module.aws_load_balancer_controller_irsa_role.aws_iam_role.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = (known after apply)
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "aws-load-balancer-controller"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "Name"    = "minecraft"
          [32m+[0m[0m "project" = "minecraft-App"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.aws_load_balancer_controller_irsa_role.aws_iam_role_policy_attachment.load_balancer_controller[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "load_balancer_controller" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = (known after apply)
      [32m+[0m[0m role       = "aws-load-balancer-controller"
    }

[1mPlan:[0m 31 to add, 0 to change, 0 to destroy.
[0m[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0m  with aws_eip.minecraft-eks-cluster-nat,
[33mâ”‚[0m [0m  on vpc.tf line 91, in resource "aws_eip" "minecraft-eks-cluster-nat":
[33mâ”‚[0m [0m  91:   vpc = [4mtrue[0m[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0muse domain attribute instead
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m(and one more similar warning elsewhere)
[33mâ•µ[0m[0m
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Saved the plan to: tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan"
[Pipeline] stash
Stashed 1 file(s)
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // script
Post stage
[Pipeline] archiveArtifacts
Archiving artifacts
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (approval)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] input
Please review the Terraform plan and click 'Proceed' to apply it
Proceed or Abort
Approved by admin
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (apply)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] dir
Running in /var/lib/jenkins/workspace/minecraft-deployment/terraform/eks-cluster-ec2
[Pipeline] {
[Pipeline] unstash
[Pipeline] sh
+ terraform apply -auto-approve tfplan
[0m[1mmodule.aws_load_balancer_controller_irsa_role.aws_iam_policy.load_balancer_controller[0]: Creating...[0m[0m
[0m[1maws_iam_role.minecraft-eks-cluster: Creating...[0m[0m
[0m[1maws_eip.minecraft-eks-cluster-nat: Creating...[0m[0m
[0m[1maws_iam_role.minecraft-eks-cluster-eks_node_group_role: Creating...[0m[0m
[0m[1maws_vpc.minecraft-eks-cluster-main: Creating...[0m[0m
[0m[1maws_iam_role.minecraft-eks-cluster: Creation complete after 1s [id=eks-cluster-minecraft-eks-cluster][0m
[0m[1maws_iam_role_policy_attachment.minecraft-eks-cluster-policy: Creating...[0m[0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.aws_iam_policy.load_balancer_controller[0]: Creation complete after 1s [id=arn:aws:iam::568170370118:policy/AmazonEKS_AWS_Load_Balancer_Controller-20240208232908437600000001][0m
[0m[1maws_iam_role.minecraft-eks-cluster-eks_node_group_role: Creation complete after 1s [id=minecraft-eks-cluster-node-group_role][0m
[0m[1maws_iam_role_policy_attachment.AmazonEC2ContainerRegistryReadOnly: Creating...[0m[0m
[0m[1maws_iam_role_policy_attachment.AmazonEKS_CNI_Policy: Creating...[0m[0m
[0m[1maws_iam_role_policy_attachment.AmazonEKSWorkerNodePolicy: Creating...[0m[0m
[0m[1maws_iam_role_policy_attachment.minecraft-eks-cluster-policy: Creation complete after 0s [id=eks-cluster-minecraft-eks-cluster-20240208232908678600000002][0m
[0m[1maws_iam_role_policy_attachment.AmazonEKS_CNI_Policy: Creation complete after 0s [id=minecraft-eks-cluster-node-group_role-20240208232908697300000003][0m
[0m[1maws_iam_role_policy_attachment.AmazonEC2ContainerRegistryReadOnly: Creation complete after 0s [id=minecraft-eks-cluster-node-group_role-20240208232908705300000004][0m
[0m[1maws_iam_role_policy_attachment.AmazonEKSWorkerNodePolicy: Creation complete after 0s [id=minecraft-eks-cluster-node-group_role-20240208232908715200000005][0m
[0m[1maws_eip.minecraft-eks-cluster-nat: Creation complete after 1s [id=eipalloc-072d24dcf4dcba8e4][0m
[0m[1maws_vpc.minecraft-eks-cluster-main: Still creating... [10s elapsed][0m[0m
[0m[1maws_vpc.minecraft-eks-cluster-main: Creation complete after 12s [id=vpc-041114780dd127863][0m
[0m[1maws_internet_gateway.minecraft-eks-cluster-igw: Creating...[0m[0m
[0m[1maws_subnet.public-us-east-1a: Creating...[0m[0m
[0m[1maws_subnet.private-us-east-1b: Creating...[0m[0m
[0m[1maws_subnet.public-us-east-1b: Creating...[0m[0m
[0m[1maws_subnet.private-us-east-1a: Creating...[0m[0m
[0m[1maws_security_group.minecraft-eks-cluster: Creating...[0m[0m
[0m[1maws_internet_gateway.minecraft-eks-cluster-igw: Creation complete after 0s [id=igw-0925405d7bec9aff2][0m
[0m[1maws_route_table.public: Creating...[0m[0m
[0m[1maws_subnet.private-us-east-1a: Creation complete after 1s [id=subnet-0ea7689316834db1e][0m
[0m[1maws_subnet.private-us-east-1b: Creation complete after 1s [id=subnet-0a729ef9e01cd925c][0m
[0m[1maws_route_table.public: Creation complete after 2s [id=rtb-03ee78490388aaf31][0m
[0m[1maws_security_group.minecraft-eks-cluster: Creation complete after 2s [id=sg-002b64dc75e00afac][0m
[0m[1maws_subnet.public-us-east-1a: Still creating... [10s elapsed][0m[0m
[0m[1maws_subnet.public-us-east-1b: Still creating... [10s elapsed][0m[0m
[0m[1maws_subnet.public-us-east-1b: Creation complete after 11s [id=subnet-0c39ca8717da1befa][0m
[0m[1maws_subnet.public-us-east-1a: Creation complete after 11s [id=subnet-0e9b772c1f24243c6][0m
[0m[1maws_route_table_association.public-us-east-1a: Creating...[0m[0m
[0m[1maws_route_table_association.public-us-east-1b: Creating...[0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Creating...[0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Creating...[0m[0m
[0m[1maws_route_table_association.public-us-east-1a: Still creating... [10s elapsed][0m[0m
[0m[1maws_route_table_association.public-us-east-1b: Still creating... [10s elapsed][0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Still creating... [10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [10s elapsed][0m[0m
[0m[1maws_route_table_association.public-us-east-1a: Still creating... [20s elapsed][0m[0m
[0m[1maws_route_table_association.public-us-east-1b: Still creating... [20s elapsed][0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Still creating... [20s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [20s elapsed][0m[0m
[0m[1maws_route_table_association.public-us-east-1a: Creation complete after 23s [id=rtbassoc-0d9dc83f29391a0c2][0m
[0m[1maws_route_table_association.public-us-east-1b: Creation complete after 23s [id=rtbassoc-08b503b8b68e5615e][0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Still creating... [30s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [30s elapsed][0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Still creating... [40s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [40s elapsed][0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Still creating... [50s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [50s elapsed][0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Still creating... [1m0s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [1m0s elapsed][0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Still creating... [1m10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [1m10s elapsed][0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Still creating... [1m20s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [1m20s elapsed][0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Still creating... [1m30s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [1m30s elapsed][0m[0m
[0m[1maws_nat_gateway.minecraft-eks-cluster-nat: Creation complete after 1m33s [id=nat-06be80417b28c92c1][0m
[0m[1maws_route_table.private: Creating...[0m[0m
[0m[1maws_route_table.private: Creation complete after 2s [id=rtb-048904a8bb920e5ee][0m
[0m[1maws_route_table_association.private-us-east-1b: Creating...[0m[0m
[0m[1maws_route_table_association.private-us-east-1a: Creating...[0m[0m
[0m[1maws_route_table_association.private-us-east-1a: Creation complete after 0s [id=rtbassoc-09a7082978a04a924][0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [1m40s elapsed][0m[0m
[0m[1maws_route_table_association.private-us-east-1b: Still creating... [10s elapsed][0m[0m
[0m[1maws_route_table_association.private-us-east-1b: Creation complete after 13s [id=rtbassoc-0837275210c84ac1f][0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [1m50s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [2m0s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [2m10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [2m20s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [2m30s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [2m40s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [2m50s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [3m0s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [3m10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [3m20s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [3m30s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [3m40s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [3m50s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [4m0s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [4m10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [4m20s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [4m30s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [4m40s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [4m50s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [5m0s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [5m10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [5m20s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [5m30s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [5m40s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [5m50s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [6m0s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [6m10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [6m20s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [6m30s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [6m40s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [6m50s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [7m0s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [7m10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [7m20s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [7m30s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [7m40s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [7m50s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [8m0s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [8m10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [8m20s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [8m30s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [8m40s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [8m50s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [9m0s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Still creating... [9m10s elapsed][0m[0m
[0m[1maws_eks_cluster.minecraft-eks-cluster: Creation complete after 9m15s [id=minecraft-eks-cluster][0m
[0m[1mdata.aws_eks_cluster.minecraft-eks-cluster: Reading...[0m[0m
[0m[1mdata.tls_certificate.minecraft-eks-cluster: Reading...[0m[0m
[0m[1maws_eks_node_group.eks_node_group: Creating...[0m[0m
[0m[1mdata.aws_eks_cluster_auth.minecraft-eks-cluster: Reading...[0m[0m
[0m[1mdata.aws_eks_cluster_auth.minecraft-eks-cluster: Read complete after 0s [id=minecraft-eks-cluster][0m
[0m[1mdata.tls_certificate.minecraft-eks-cluster: Read complete after 0s [id=5933588ce34e24e9fb40c3565fb0b5993639df67][0m
[0m[1maws_iam_openid_connect_provider.minecraft-eks-cluster: Creating...[0m[0m
[0m[1mdata.aws_eks_cluster.minecraft-eks-cluster: Read complete after 0s [id=minecraft-eks-cluster][0m
[0m[1maws_iam_openid_connect_provider.minecraft-eks-cluster: Creation complete after 0s [id=arn:aws:iam::568170370118:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/93F5B46738BF262CE6D5C66A3182C595][0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.this[0]: Reading...[0m[0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.this[0]: Read complete after 0s [id=3802407380][0m
[0m[1mmodule.aws_load_balancer_controller_irsa_role.aws_iam_role.this[0]: Creating...[0m[0m
[0m[1mkubernetes_namespace.aws_load_balancer_controller: Creating...[0m[0m
[0m[1mkubernetes_namespace.minecraft-application: Creating...[0m[0m
[0m[1mkubernetes_namespace.minecraft-application: Creation complete after 1s [id=minecraft][0m
[0m[1mkubernetes_namespace.aws_load_balancer_controller: Creation complete after 1s [id=aws-load-balancer-controller][0m
[0m[1maws_eks_node_group.eks_node_group: Still creating... [10s elapsed][0m[0m
[0m[1maws_eks_node_group.eks_node_group: Still creating... [20s elapsed][0m[0m
[0m[1maws_eks_node_group.eks_node_group: Still creating... [30s elapsed][0m[0m
[0m[1maws_eks_node_group.eks_node_group: Still creating... [40s elapsed][0m[0m
[0m[1maws_eks_node_group.eks_node_group: Still creating... [50s elapsed][0m[0m
[0m[1maws_eks_node_group.eks_node_group: Still creating... [1m0s elapsed][0m[0m
[0m[1maws_eks_node_group.eks_node_group: Still creating... [1m10s elapsed][0m[0m
+ cd spring-boot-app
+ mvn -U clean package
[INFO] Scanning for projects...
[INFO] 
[INFO] -------------------< com.abhishek:minecraft-server >--------------------
[INFO] Building minecraft-server 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.2.0:clean (default-clean) @ minecraft-server ---
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ minecraft-server ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/minecraft-deployment/spring-boot-app/src/main/resources
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ minecraft-server ---
[INFO] No sources to compile
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ minecraft-server ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/minecraft-deployment/spring-boot-app/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ minecraft-server ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.2.2:test (default-test) @ minecraft-server ---
[INFO] No tests to run.
[INFO] 
[INFO] --- jar:3.3.0:jar (default-jar) @ minecraft-server ---
[WARNING] JAR will be empty - no content was marked for inclusion!
[INFO] Building jar: /var/lib/jenkins/workspace/minecraft-deployment/spring-boot-app/target/minecraft-server-1.0.0.jar
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.532 s
[INFO] Finished at: 2024-02-08T23:44:42Z
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Unit Test)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ cd spring-boot-app
+ mvn test
[INFO] Scanning for projects...
[INFO] 
[INFO] -------------------< com.abhishek:minecraft-server >--------------------
[INFO] Building minecraft-server 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ minecraft-server ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/minecraft-deployment/spring-boot-app/src/main/resources
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ minecraft-server ---
[INFO] No sources to compile
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ minecraft-server ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/minecraft-deployment/spring-boot-app/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ minecraft-server ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.2.2:test (default-test) @ minecraft-server ---
[INFO] No tests to run.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  1.629 s
[INFO] Finished at: 2024-02-08T23:44:48Z
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Integration Test)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ cd spring-boot-app
+ mvn verify -DskipUnitTests
[INFO] Scanning for projects...
[INFO] 
[INFO] -------------------< com.abhishek:minecraft-server >--------------------
[INFO] Building minecraft-server 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ minecraft-server ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/minecraft-deployment/spring-boot-app/src/main/resources
[INFO] 
[INFO] --- compiler:3.11.0:compile (default-compile) @ minecraft-server ---
[INFO] No sources to compile
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ minecraft-server ---
[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
[INFO] skip non existing resourceDirectory /var/lib/jenkins/workspace/minecraft-deployment/spring-boot-app/src/test/resources
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ minecraft-server ---
[INFO] No sources to compile
[INFO] 
[INFO] --- surefire:3.2.2:test (default-test) @ minecraft-server ---
[INFO] No tests to run.
[INFO] 
[INFO] --- jar:3.3.0:jar (default-jar) @ minecraft-server ---
[WARNING] JAR will be empty - no content was marked for inclusion!
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  2.112 s
[INFO] Finished at: 2024-02-08T23:44:54Z
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Checkstyle Code Analysis)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ cd spring-boot-app
+ mvn checkstyle:checkstyle
[INFO] Scanning for projects...
[INFO] 
[INFO] -------------------< com.abhishek:minecraft-server >--------------------
[INFO] Building minecraft-server 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- checkstyle:3.3.1:checkstyle (default-cli) @ minecraft-server ---
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.221 s
[INFO] Finished at: 2024-02-08T23:45:00Z
[INFO] ------------------------------------------------------------------------
Post stage
[Pipeline] echo
Generated Analysis Result
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Static Code Analysis)
[Pipeline] withEnv
[Pipeline] {
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $SONAR_AUTH_TOKEN
[Pipeline] {
[Pipeline] sh
+ cd spring-boot-app
+ mvn sonar:sonar -Dsonar.login=**** -Dsonar.host.url=http://3.238.3.76:9000/
[INFO] Scanning for projects...
[WARNING] The artifact org.codehaus.mojo:sonar-maven-plugin:jar:3.10.0.2594 has been relocated to org.sonarsource.scanner.maven:sonar-maven-plugin:jar:3.10.0.2594: SonarQube plugin was moved to SonarSource organisation
[INFO] 
[INFO] -------------------< com.abhishek:minecraft-server >--------------------
[INFO] Building minecraft-server 1.0.0
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- sonar:3.10.0.2594:sonar (default-cli) @ minecraft-server ---
[INFO] User cache: /var/lib/jenkins/.sonar/cache
[INFO] SonarQube version: 8.3.0
[INFO] Default locale: "en_US", source code encoding: "UTF-8" (analysis is platform dependent)
[INFO] Load global settings
[INFO] Load global settings (done) | time=126ms
[INFO] Server id: 86E1FA4D-AY2JA7ZA3Bx0CXKSR8jN
[INFO] User cache: /var/lib/jenkins/.sonar/cache
[INFO] Load/download plugins
[INFO] Load plugins index
[INFO] Load plugins index (done) | time=103ms
[INFO] Load/download plugins (done) | time=275ms
[INFO] Process project properties
[INFO] Process project properties (done) | time=27ms
[INFO] Execute project builders
[INFO] Execute project builders (done) | time=14ms
[INFO] Project key: com.abhishek:minecraft-server
[INFO] Base dir: /var/lib/jenkins/workspace/minecraft-deployment/spring-boot-app
[INFO] Working dir: /var/lib/jenkins/workspace/minecraft-deployment/spring-boot-app/target/sonar
[INFO] Load project settings for component key: 'com.abhishek:minecraft-server'
[INFO] Load project settings for component key: 'com.abhishek:minecraft-server' (done) | time=17ms
[INFO] Load quality profiles
[INFO] Load quality profiles (done) | time=69ms
[INFO] Auto-configuring with CI 'Jenkins'
[INFO] Load active rules
[INFO] Load active rules (done) | time=626ms
[INFO] Indexing files...
[INFO] Project configuration:
[INFO] 1 file indexed
[INFO] 0 files ignored because of scm ignore settings
[INFO] Quality profile for xml: Sonar way
[INFO] ------------- Run sensors on module minecraft-server
[INFO] Load metrics repository
[INFO] Load metrics repository (done) | time=18ms
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by net.sf.cglib.core.ReflectUtils$1 (file:/var/lib/jenkins/.sonar/cache/54f6535c111cefad0fb6a09ba3e61922/sonar-javascript-plugin.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of net.sf.cglib.core.ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] Sensor SonarCSS Rules [cssfamily]
[INFO] No CSS, PHP, HTML or VueJS files are found in the project. CSS analysis is skipped.
[INFO] Sensor SonarCSS Rules [cssfamily] (done) | time=3ms
[INFO] Sensor JaCoCo XML Report Importer [jacoco]
[INFO] 'sonar.coverage.jacoco.xmlReportPaths' is not defined. Using default locations: target/site/jacoco/jacoco.xml,target/site/jacoco-it/jacoco.xml,build/reports/jacoco/test/jacocoTestReport.xml
[INFO] No report imported, no coverage information will be imported by JaCoCo XML Report Importer
[INFO] Sensor JaCoCo XML Report Importer [jacoco] (done) | time=3ms
[INFO] Sensor JavaXmlSensor [java]
[INFO] 1 source files to be analyzed
[INFO] Load project repositories
[INFO] Load project repositories (done) | time=26ms
[INFO] 1/1 source files have been analyzed
[INFO] Sensor JavaXmlSensor [java] (done) | time=248ms
[INFO] Sensor HTML [web]
[INFO] Sensor HTML [web] (done) | time=5ms
[INFO] Sensor XML Sensor [xml]
[INFO] 1 source files to be analyzed
[INFO] 1/1 source files have been analyzed
[INFO] Sensor XML Sensor [xml] (done) | time=226ms
[INFO] ------------- Run sensors on project
[INFO] Sensor Zero Coverage Sensor
[INFO] Sensor Zero Coverage Sensor (done) | time=1ms
[INFO] CPD Executor Calculating CPD for 0 files
[INFO] CPD Executor CPD calculation finished (done) | time=0ms
[INFO] Analysis report generated in 171ms, dir size=83 KB
[INFO] Analysis report compressed in 38ms, zip size=11 KB
[INFO] Analysis report uploaded in 31ms
[INFO] ANALYSIS SUCCESSFUL, you can browse http://3.238.3.76:9000/dashboard?id=com.abhishek%3Aminecraft-server
[INFO] Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
[INFO] More about the report processing at http://3.238.3.76:9000/api/ce/task?id=AY2LHHYs3Bx0CXKSR_BY
[INFO] Analysis total time: 6.209 s
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  9.859 s
[INFO] Finished at: 2024-02-08T23:45:14Z
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Docker Build & Push to dockerhub)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] withDockerRegistry
$ /var/lib/jenkins/tools/org.jenkinsci.plugins.docker.commons.tools.DockerTool/docker/bin/docker login -u dappyplay4u -p ******** https://index.docker.io/v1/
Login Succeeded
[Pipeline] {
[Pipeline] sh
+ cd spring-boot-app
+ docker build -t minecraft .
Sending build context to Docker daemon  110.1kB

Step 1/8 : FROM ubuntu:22.04
 ---> fd1d8f58e8ae
Step 2/8 : ENV DEBIAN_FRONTEND=noninteractive
 ---> Using cache
 ---> 1fb87e47a43e
Step 3/8 : WORKDIR /minecraft
 ---> Using cache
 ---> 0c2b95ee20f4
Step 4/8 : RUN apt-get update && apt-get install -y     openjdk-17-jdk     wget     && rm -rf /var/lib/apt/lists/*
 ---> Using cache
 ---> 36c5200aadef
Step 5/8 : RUN wget -O server.jar https://piston-data.mojang.com/v1/objects/8dd1a28015f51b1803213892b50b7b4fc76e594d/server.jar
 ---> Using cache
 ---> d768a4eff75f
Step 6/8 : RUN echo "eula=true" > eula.txt
 ---> Using cache
 ---> 8cb5d71d7e75
Step 7/8 : EXPOSE 25565
 ---> Using cache
 ---> 952a4b521881
Step 8/8 : CMD ["java", "-Xmx1024M", "-Xms1024M", "-jar", "server.jar", "nogui"]
 ---> Using cache
 ---> 446fd23b5b18
Successfully built 446fd23b5b18
Successfully tagged minecraft:latest
[Pipeline] sh
+ docker tag minecraft dappyplay4u/minecraft:latest
[Pipeline] sh
+ docker push dappyplay4u/minecraft:latest
The push refers to repository [docker.io/dappyplay4u/minecraft]
0cd463dd9179: Preparing
53c56d4119a9: Preparing
fd591a8d366f: Preparing
866d369b51ca: Preparing
1a102d1cac2b: Preparing
0cd463dd9179: Layer already exists
1a102d1cac2b: Layer already exists
fd591a8d366f: Layer already exists
53c56d4119a9: Layer already exists
866d369b51ca: Layer already exists
latest: digest: sha256:729c822cce8a456bfb53742d4612187a53f2292674cc0eae806b5d11a8c1ce3b size: 1368
[Pipeline] }
[Pipeline] // withDockerRegistry
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy to container)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker run -d -p 8095:8088 dappyplay4u/minecraft:latest
8ba6ac4db3af15e2679629434567bece11991abd688cbf801f705af336b050b3
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Install kubectl)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ KUBECTL_VERSION=v1.24.0
+ curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.24.0/bin/linux/amd64/kubectl
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 43.5M  100 43.5M    0     0  85.3M      0 --:--:-- --:--:-- --:--:-- 85.4M
+ sudo chmod +x kubectl
+ sudo mv kubectl /usr/local/bin/
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy to EKS)
[Pipeline] withEnv
[Pipeline] {
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ sed -i s/replaceImageTag/2/g k8s-manifests/deployment.yaml
[Pipeline] sh
+ sed -i s/replaceImageTag/2/g k8s-manifests/service.yaml
[Pipeline] dir
Running in /var/lib/jenkins/workspace/minecraft-deployment/k8s-manifests
[Pipeline] {
[Pipeline] sh
+ aws eks update-kubeconfig --name minecraft-eks-cluster --region us-east-1
Updated context arn:aws:eks:us-east-1:568170370118:cluster/minecraft-eks-cluster in /var/lib/jenkins/.kube/config
[Pipeline] sh
+ kubectl apply -f .
deployment.apps/minecraft created
service/minecraft-app-service created
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (approve destroy for terraform)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] input
Do you want to Proceed to destroy terraform resources
Proceed or Abort
k8s-manifests/Screenshot 2024-02-08 172944.png k8s-manifests/Screenshot 2024-02-08 173002.png k8s-manifests/Screenshot 2024-02-08 173819.png k8s-manifests/Screenshot 2024-02-08 174439.png k8s-manifests/Screenshot 2024-02-08 174516.png k8s-manifests/Screenshot 2024-02-08 185033.png